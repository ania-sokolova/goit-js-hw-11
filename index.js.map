{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from \"axios\";\n\nconst apiKey = \"48848365-f4e25352a2e58b0aa69d4606d\";\nconst baseUrl = \"https://pixabay.com/api/\";\n\n\nexport async function fetchImages(query) {\n  const url = `${baseUrl}?key=${apiKey}&q=${encodeURIComponent(query)}&image_type=photo`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data.hits; \n  } catch (error) {\n    console.error(\"Error fetching images:\", error);\n    throw error; \n  }\n}\n","import SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nexport function renderImages(images) {\n  const gallery = document.querySelector(\".gallery\");\n  gallery.innerHTML = \"\"; \n  if (images.length === 0) {\n    iziToast.error({\n      title: \"Error\",\n      message: \"Sorry, no images found. Please try another search!\",\n      position: \"topRight\",\n    });\n    return;\n  }\n\n  const galleryMarkup = images\n    .map(\n      ({ previewURL, largeImageURL, tags }) =>\n        `<li class=\"gallery-item\">\n          <a class=\"gallery-link\" href=\"${largeImageURL}\">\n            <img class=\"gallery-image\"\n                 src=\"${previewURL}\"\n                 data-source=\"${largeImageURL}\"\n                 alt=\"${tags}\" />\n          </a>\n        </li>`\n    )\n    .join(\"\");\n\n  gallery.insertAdjacentHTML(\"beforeend\", galleryMarkup);\n\n  new SimpleLightbox(\".gallery a\", { captionsData: \"alt\", captionDelay: 250 });\n}\n\n\n","import { fetchImages } from \"./js/pixabay-api.js\";\nimport { renderImages } from \"./js/render-functions.js\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst form = document.querySelector(\".search-form\");\nconst searchInput = form.querySelector(\"input[name='text']\");\n\nform.addEventListener(\"submit\", async (evt) => {\n  evt.preventDefault();\n  const query = searchInput.value.trim();\n\n  if (query === \"\") {\n    iziToast.warning({\n      title: \"Warning\",\n      message: \"Please enter a search query!\",\n      position: \"topRight\",\n    });\n    return;\n  }\n\n  try {\n    const images = await fetchImages(query);\n    renderImages(images);\n  } catch (error) {\n    iziToast.error({\n      title: \"Error\",\n      message: \"Failed to fetch images. Please try again!\",\n      position: \"topRight\",\n    });\n  }\n});\n\n\n"],"names":["apiKey","baseUrl","fetchImages","query","url","axios","error","renderImages","images","gallery","iziToast","galleryMarkup","previewURL","largeImageURL","tags","SimpleLightbox","form","searchInput","evt"],"mappings":"+vBAEA,MAAMA,EAAS,qCACTC,EAAU,2BAGT,eAAeC,EAAYC,EAAO,CACvC,MAAMC,EAAM,GAAGH,CAAO,QAAQD,CAAM,MAAM,mBAAmBG,CAAK,CAAC,oBAEnE,GAAI,CAEF,OADiB,MAAME,EAAM,IAAID,CAAG,GACpB,KAAK,IACtB,OAAQE,EAAO,CACd,cAAQ,MAAM,yBAA0BA,CAAK,EACvCA,CACP,CACH,CCXO,SAASC,EAAaC,EAAQ,CACnC,MAAMC,EAAU,SAAS,cAAc,UAAU,EAEjD,GADAA,EAAQ,UAAY,GAChBD,EAAO,SAAW,EAAG,CACvBE,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qDACT,SAAU,UAChB,CAAK,EACD,MACD,CAED,MAAMC,EAAgBH,EACnB,IACC,CAAC,CAAE,WAAAI,EAAY,cAAAC,EAAe,KAAAC,CAAM,IAClC;AAAA,0CACkCD,CAAa;AAAA;AAAA,wBAE/BD,CAAU;AAAA,gCACFC,CAAa;AAAA,wBACrBC,CAAI;AAAA;AAAA,cAGvB,EACA,KAAK,EAAE,EAEVL,EAAQ,mBAAmB,YAAaE,CAAa,EAErD,IAAII,EAAe,aAAc,CAAE,aAAc,MAAO,aAAc,GAAG,CAAE,CAC7E,CC7BA,MAAMC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAcD,EAAK,cAAc,oBAAoB,EAE3DA,EAAK,iBAAiB,SAAU,MAAOE,GAAQ,CAC7CA,EAAI,eAAc,EAClB,MAAMf,EAAQc,EAAY,MAAM,KAAI,EAEpC,GAAId,IAAU,GAAI,CAChBO,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,+BACT,SAAU,UAChB,CAAK,EACD,MACD,CAED,GAAI,CACF,MAAMF,EAAS,MAAMN,EAAYC,CAAK,EACtCI,EAAaC,CAAM,CACpB,MAAe,CACdE,EAAS,MAAM,CACb,MAAO,QACP,QAAS,4CACT,SAAU,UAChB,CAAK,CACF,CACH,CAAC"}